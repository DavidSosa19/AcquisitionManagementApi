// <auto-generated />
using System;
using System.Collections.Generic;
using AcquisitionManagementAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AcquisitionManagementAPI.Migrations
{
    [DbContext(typeof(AcquisitiondbContext))]
    partial class AcquisitiondbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AcquisitionManagementAPI.Models.Acquisition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Cantidad")
                        .HasPrecision(20)
                        .HasColumnType("numeric(20)")
                        .HasColumnName("cantidad");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.PrimitiveCollection<List<string>>("Documentacion")
                        .IsRequired()
                        .HasColumnType("character varying[]")
                        .HasColumnName("documentacion");

                    b.Property<DateOnly>("FechaAdquisicion")
                        .HasColumnType("date")
                        .HasColumnName("fecha_adquisicion");

                    b.Property<decimal>("Presupuesto")
                        .HasPrecision(30)
                        .HasColumnType("numeric(30)")
                        .HasColumnName("presupuesto");

                    b.Property<int>("Proveedor")
                        .HasColumnType("integer")
                        .HasColumnName("proveedor");

                    b.Property<int>("TipoBienServicio")
                        .HasColumnType("integer")
                        .HasColumnName("tipo_bien_servicio");

                    b.Property<int>("Unidad")
                        .HasColumnType("integer")
                        .HasColumnName("unidad");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<decimal>("ValorTotal")
                        .HasPrecision(30)
                        .HasColumnType("numeric(30)")
                        .HasColumnName("valor_total");

                    b.Property<decimal>("ValorUnitario")
                        .HasPrecision(30)
                        .HasColumnType("numeric(30)")
                        .HasColumnName("valor_unitario");

                    b.HasKey("Id")
                        .HasName("adquisiciones_pkey");

                    b.HasIndex("Proveedor");

                    b.HasIndex("TipoBienServicio");

                    b.HasIndex("Unidad");

                    b.ToTable("adquisiciones", (string)null);
                });

            modelBuilder.Entity("AcquisitionManagementAPI.Models.AssetServiceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("tipos_bien_servicio_pkey");

                    b.HasIndex(new[] { "Nombre" }, "tipos_bien_servicio_nombre_key")
                        .IsUnique();

                    b.ToTable("tipos_bien_servicio", (string)null);
                });

            modelBuilder.Entity("AcquisitionManagementAPI.Models.Provider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("proveedores_pkey");

                    b.HasIndex(new[] { "Nombre" }, "proveedores_nombre_key")
                        .IsUnique();

                    b.ToTable("proveedores", (string)null);
                });

            modelBuilder.Entity("AcquisitionManagementAPI.Models.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasDefaultValueSql("nextval('unidad_id_seq'::regclass)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("unidad_pkey");

                    b.HasIndex(new[] { "Nombre" }, "unidad_nombre_key")
                        .IsUnique();

                    b.ToTable("unidades", (string)null);
                });

            modelBuilder.Entity("AcquisitionManagementAPI.Models.Acquisition", b =>
                {
                    b.HasOne("AcquisitionManagementAPI.Models.Provider", "ProveedorNavigation")
                        .WithMany("Adquisiciones")
                        .HasForeignKey("Proveedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fkey_proveedores");

                    b.HasOne("AcquisitionManagementAPI.Models.AssetServiceType", "TipoBienServicioNavigation")
                        .WithMany("Adquisiciones")
                        .HasForeignKey("TipoBienServicio")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired()
                        .HasConstraintName("fk_tipos_bien_servicio");

                    b.HasOne("AcquisitionManagementAPI.Models.Unit", "UnidadNavigation")
                        .WithMany("Adquisiciones")
                        .HasForeignKey("Unidad")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired()
                        .HasConstraintName("fk_unidad");

                    b.Navigation("ProveedorNavigation");

                    b.Navigation("TipoBienServicioNavigation");

                    b.Navigation("UnidadNavigation");
                });

            modelBuilder.Entity("AcquisitionManagementAPI.Models.AssetServiceType", b =>
                {
                    b.Navigation("Adquisiciones");
                });

            modelBuilder.Entity("AcquisitionManagementAPI.Models.Provider", b =>
                {
                    b.Navigation("Adquisiciones");
                });

            modelBuilder.Entity("AcquisitionManagementAPI.Models.Unit", b =>
                {
                    b.Navigation("Adquisiciones");
                });
#pragma warning restore 612, 618
        }
    }
}
